idia_data_b nvidia_reduced_data_b
(/opt/carnd_p3/behavioral) root@03291d45754a:/home/workspace/CarND-Behavioral-Cloning-P3# pwd
/home/workspace/CarND-Behavioral-Cloning-P3
(/opt/carnd_p3/behavioral) root@03291d45754a:/home/workspace/CarND-Behavioral-Cloning-P3# cd nvidia_data_b/
(/opt/carnd_p3/behavioral) root@03291d45754a:/home/workspace/CarND-Behavioral-Cloning-P3/nvidia_da
ta_b# python model.py -m nvidia -d ../data  
Using TensorFlow backend.
Training data will be taken from:  ../data
Output file is  model_nvidia  +.h5
Please confirm with "Y"!  :: Y
1 directory as input data found.
../data
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
cropping2d_1 (Cropping2D)    (None, 50, 280, 3)        0         
_________________________________________________________________
lambda_1 (Lambda)            (None, 50, 280, 3)        0         
_________________________________________________________________
dropout_1 (Dropout)          (None, 50, 280, 3)        0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 23, 138, 24)       1824      
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 10, 67, 36)        21636     
_________________________________________________________________
conv2d_3 (Conv2D)            (None, 6, 63, 48)         43248     
_________________________________________________________________
conv2d_4 (Conv2D)            (None, 4, 61, 64)         27712     
_________________________________________________________________
conv2d_5 (Conv2D)            (None, 2, 59, 64)         36928     
_________________________________________________________________
flatten_1 (Flatten)          (None, 7552)              0         
_________________________________________________________________
dropout_2 (Dropout)          (None, 7552)              0         
_________________________________________________________________
dense_1 (Dense)              (None, 50)                377650    
_________________________________________________________________
activation_1 (Activation)    (None, 50)                0         
_________________________________________________________________
dropout_3 (Dropout)          (None, 50)                0         
_________________________________________________________________
dense_2 (Dense)              (None, 25)                1275      
_________________________________________________________________
batch_normalization_1 (Batch (None, 25)                100       
_________________________________________________________________
activation_2 (Activation)    (None, 25)                0         
_________________________________________________________________
dense_3 (Dense)              (None, 10)                260       
_________________________________________________________________
activation_3 (Activation)    (None, 10)                0         
_________________________________________________________________
dense_4 (Dense)              (None, 1)                 11        
=================================================================
Total params: 510,644
Trainable params: 510,594
Non-trainable params: 50
_________________________________________________________________
Start training with data from directory:  ../data
Epoch 1/10
2019-08-07 14:50:26.226030: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2019-08-07 14:50:26.226143: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2019-08-07 14:50:26.226185: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
2019-08-07 14:50:26.226200: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
2019-08-07 14:50:26.226215: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
2019-08-07 14:50:26.349732: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2019-08-07 14:50:26.351415: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: 
name: Tesla K80
major: 3 minor: 7 memoryClockRate (GHz) 0.8235
pciBusID 0000:00:04.0
Total memory: 11.17GiB
Free memory: 11.05GiB
2019-08-07 14:50:26.353329: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 
2019-08-07 14:50:26.353597: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y 
2019-08-07 14:50:26.353894: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0)
603/603 [==============================] - 90s 149ms/step - loss: 0.0490 - val_loss: 0.0131

Epoch 00001: saving model to .//checkpoints-8-7-14-0001-01-01 00:00:00-24/model.ckpt
Epoch 2/10
603/603 [==============================] - 87s 144ms/step - loss: 0.0303 - val_loss: 0.0144

Epoch 00002: saving model to .//checkpoints-8-7-14-0001-01-01 00:00:00-24/model.ckpt
Epoch 3/10
603/603 [==============================] - 87s 143ms/step - loss: 0.0275 - val_loss: 0.0137

Epoch 00003: saving model to .//checkpoints-8-7-14-0001-01-01 00:00:00-24/model.ckpt
